import os
import shutil
from setuptools import setup, find_packages
from setuptools.command.install import install

class CustomInstallCommand(install):
    """
    Custom installation process to copy `bin` folder files into `lib/pythonX/site-packages`.
    """
    def run(self):
        # Run the standard install process
        install.run(self)

        # Define the source and destination paths
        src_bin_dir = os.path.join(os.getcwd(), 'bin')  # Source bin directory
        lib_dir = os.path.join(self.install_lib, 'bin')  # Destination bin directory inside lib

        # Ensure the destination directory exists
        if not os.path.exists(lib_dir):
            os.makedirs(lib_dir)

        # Copy files from bin to lib/bin
        if os.path.exists(src_bin_dir):
            for file_name in os.listdir(src_bin_dir):
                src_file = os.path.join(src_bin_dir, file_name)
                dst_file = os.path.join(lib_dir, file_name)

                if os.path.isfile(src_file):
                    shutil.copy2(src_file, dst_file)
                    print(f"Copied {src_file} to {dst_file}")
                else:
                    print(f"Skipped non-file: {src_file}")

# Package metadata
NAME = 'demo'
VERSION = os.getenv('BUILD_VERSION', '4.1')
AUTHOR = ''
AUTHOR_EMAIL = ''

setup(
    name=NAME,
    version=VERSION,
    author=AUTHOR,
    author_email=AUTHOR_EMAIL,
    url='',
    packages=find_packages('src'),  # Include all packages under 'src'
    package_dir={'': 'src'},  # Tell distutils that packages are under 'src'
    include_package_data=True,  # Include data files specified in MANIFEST.in
    zip_safe=False,
    cmdclass={
        'install': CustomInstallCommand,  # Override the install command
    },
)
